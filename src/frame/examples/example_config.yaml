path: /Users/chrysanth/Documents/_code/CoreStudioBruxelles
name: "Core Core Liverpool"

types:
  parsers:
    launchctl:
      type: regex
      pattern: (\d+)\s+(\d+)\s+([\w\.]+)
      list: true
      group:
        pid: 1
        ppid: 2
        name: 3

defaults:
  get:
    shell:
      renderer: string

  action:
    notification:
      targets: ["ifttt"]

  target:
    ifttt:
      url: "https://maker.ifttt.com/trigger/corecore/with/key/oYagjlMI8HcVIo_uqIrm3"

settings:
  osc:
    point: 57120
    endpoint: 127.0.0.1

model:
  status:
    name: "Status"
    poll: 1
    get:
      type: shell
      cmd: ps aux | grep -v grep | grep sclang || echo "---"
      parser: { type: "detect", pattern: "sclang" }
    renderer: status

  processes:
    name: "Processes"
    get:
      type: shell
      cmd: launchctl list
      parser: launchctl
    renderer: json

  uptime:
    name: "Uptime"
    poll: 1
    get:
      type: shell
      cmd: "uptime"
      parser: { type: "regex", pattern: "up (.*?),", group: 1 }

  cpu:
    name: "CPU Usage"
    poll: 0.5
    get:
      type: shell
      cmd: 'ps -A -o %cpu | awk ''{s+=$1} END {print s "%"}'''

  log:
    name: "Log"
    poll: 1
    renderer: log
    get:
      type: tail
      path: "/Users/chrysanth/Desktop/sclang-Log-quark.log"

  system_information:
    name: "System Information"
    get:
      type: shell
      cmd:
        [
          "system_profiler",
          "SPHardwareDataType",
          "SPSoftwareDataType",
          "SPStorageDataType",
          "-json",
        ]
      parser: "json"
    renderer: { type: "json", folding: true }

  screenshot:
    name: "Screenshot"
    get: screenshot
    renderer: image

actions:
  restart:
    name: "Restart"
    renderer: action
    type: sequence
    actions: ["stop", "start"]
  stop:
    name: "Stop"
    renderer: action
    type: shell
    cmd: ./daemons/disable_autoplay.command
  start:
    name: "Start"
    renderer: action
    type: shell
    cmd: ./daemons/enable_autoplay.command
  project_down:
    name: "Project Down"
    type: notification
    condition: status == False
    target: ["email"]
    message: "The project is down! Status: {{status}}"
